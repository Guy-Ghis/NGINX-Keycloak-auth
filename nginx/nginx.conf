events { worker_connections 1024; }

http {
  server_tokens off;
  # proxy read timeout etc
  proxy_buffering off;

  # Authentication subrequest location
  # nginx will call this for auth_request
  upstream oauth2_proxy_upstream {
    server oauth2-proxy:4180;
  }

  server {
    listen 80;
    server_name _;

    # health check endpoint
    location = /health {
      return 200 "ok\n";
    }

    # auth_request subrequest (returns 2xx if allowed)
    location / {
      auth_request /_oauth2/auth;
      auth_request_set $auth_user $upstream_http_x_auth_request_user;
      auth_request_set $auth_email $upstream_http_x_auth_request_email;
      error_page 401 = @error401;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-User $auth_user;
      proxy_set_header X-Email $auth_email;
      proxy_pass http://httpbin:80;
    }

    location /oauth2/ {
      proxy_pass http://oauth2_proxy_upstream/oauth2/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Auth-Request-Redirect $scheme://$host$request_uri;
    }

    location @error401 {
      return 302 /oauth2/start?rd=$request_uri;
    }
  }
}